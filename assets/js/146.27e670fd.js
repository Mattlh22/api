(window.webpackJsonp=window.webpackJsonp||[]).push([[146],{494:function(e,t,r){"use strict";r.r(t);var a=r(42),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[r("strong",[r("RouterLink",{attrs:{to:"/api/"}},[e._v("Polkadot JS API")])],1)]),e._v(" "),r("blockquote",[r("p",[r("RouterLink",{attrs:{to:"/api/globals.html"}},[e._v("Globals")]),e._v(" / "),r("RouterLink",{attrs:{to:"/api/modules/_packages_api_src_augment_rpc_.html"}},[e._v('"packages/api/src/augment/rpc"')]),e._v(" / "),r("RouterLink",{attrs:{to:"/api/modules/_packages_api_src_augment_rpc_._rpc_core_types_.html"}},[e._v('"rpc-core/types"')]),e._v(" / RpcInterface")],1)]),e._v(" "),r("h1",{attrs:{id:"interface-rpcinterface"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#interface-rpcinterface"}},[e._v("#")]),e._v(" Interface: RpcInterface")]),e._v(" "),r("h2",{attrs:{id:"hierarchy"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hierarchy"}},[e._v("#")]),e._v(" Hierarchy")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("RpcInterface")])])]),e._v(" "),r("h2",{attrs:{id:"index"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#index"}},[e._v("#")]),e._v(" Index")]),e._v(" "),r("h3",{attrs:{id:"properties"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/api/interfaces/_packages_api_src_augment_rpc_._rpc_core_types_.rpcinterface.html#author"}},[e._v("author")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/api/interfaces/_packages_api_src_augment_rpc_._rpc_core_types_.rpcinterface.html#babe"}},[e._v("babe")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/api/interfaces/_packages_api_src_augment_rpc_._rpc_core_types_.rpcinterface.html#chain"}},[e._v("chain")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/api/interfaces/_packages_api_src_augment_rpc_._rpc_core_types_.rpcinterface.html#childstate"}},[e._v("childstate")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/api/interfaces/_packages_api_src_augment_rpc_._rpc_core_types_.rpcinterface.html#contracts"}},[e._v("contracts")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/api/interfaces/_packages_api_src_augment_rpc_._rpc_core_types_.rpcinterface.html#engine"}},[e._v("engine")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/api/interfaces/_packages_api_src_augment_rpc_._rpc_core_types_.rpcinterface.html#grandpa"}},[e._v("grandpa")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/api/interfaces/_packages_api_src_augment_rpc_._rpc_core_types_.rpcinterface.html#offchain"}},[e._v("offchain")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/api/interfaces/_packages_api_src_augment_rpc_._rpc_core_types_.rpcinterface.html#payment"}},[e._v("payment")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/api/interfaces/_packages_api_src_augment_rpc_._rpc_core_types_.rpcinterface.html#rpc"}},[e._v("rpc")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/api/interfaces/_packages_api_src_augment_rpc_._rpc_core_types_.rpcinterface.html#state"}},[e._v("state")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/api/interfaces/_packages_api_src_augment_rpc_._rpc_core_types_.rpcinterface.html#system"}},[e._v("system")])],1)]),e._v(" "),r("h2",{attrs:{id:"properties-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#properties-2"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),r("h3",{attrs:{id:"author"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#author"}},[e._v("#")]),e._v(" author")]),e._v(" "),r("p",[e._v("•  "),r("strong",[e._v("author")]),e._v(": { hasKey: AugmentedRpc<(publicKey: Bytes | string | Uint8Array,keyType: Text | string) => Observable<bool>> ; hasSessionKeys: AugmentedRpc<(sessionKeys: Bytes | string | Uint8Array) => Observable<bool>> ; insertKey: AugmentedRpc<(keyType: Text | string,suri: Text | string,publicKey: Bytes | string | Uint8Array) => Observable<Bytes>> ; pendingExtrinsics: AugmentedRpc<() => Observable<Vec<Extrinsic>>> ; removeExtrinsic: AugmentedRpc<(bytesOrHash: Vec<ExtrinsicOrHash> | (ExtrinsicOrHash | { Hash: any  } | { Extrinsic: any  } | string | Uint8Array)[]) => Observable<Vec<Hash>>> ; rotateKeys: AugmentedRpc<() => Observable<Bytes>> ; submitAndWatchExtrinsic: AugmentedRpc<(extrinsic: IExtrinsic) => Observable<ExtrinsicStatus>> ; submitExtrinsic: AugmentedRpc<(extrinsic: IExtrinsic) => Observable<Hash>>  }")]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/polkadot-js/api/blob/d3703c072/packages/api/src/augment/rpc.ts#L26",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/api/src/augment/rpc.ts:26"),r("OutboundLink")],1)])]),e._v(" "),r("h4",{attrs:{id:"type-declaration"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#type-declaration"}},[e._v("#")]),e._v(" Type declaration:")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("hasKey")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(publicKey: Bytes | string | Uint8Array,keyType: Text | string) => Observable<bool>>")]),e._v(" "),r("td",[e._v("Returns true if the keystore has private keys for the given public key and key type.")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("hasSessionKeys")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(sessionKeys: Bytes | string | Uint8Array) => Observable<bool>>")]),e._v(" "),r("td",[e._v("Returns true if the keystore has private keys for the given session public keys.")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("insertKey")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(keyType: Text | string,suri: Text | string,publicKey: Bytes | string | Uint8Array) => Observable<Bytes>>")]),e._v(" "),r("td",[e._v("Insert a key into the keystore.")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("pendingExtrinsics")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<Vec<Extrinsic>>>")]),e._v(" "),r("td",[e._v("Returns all pending extrinsics, potentially grouped by sender")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("removeExtrinsic")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(bytesOrHash: Vec<ExtrinsicOrHash> | (ExtrinsicOrHash | { Hash: any  } | { Extrinsic: any  } | string | Uint8Array)[]) => Observable<Vec<Hash>>>")]),e._v(" "),r("td",[e._v("Remove given extrinsic from the pool and temporarily ban it to prevent reimporting")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("rotateKeys")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<Bytes>>")]),e._v(" "),r("td",[e._v("Generate new session keys and returns the corresponding public keys")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("submitAndWatchExtrinsic")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(extrinsic: IExtrinsic) => Observable<ExtrinsicStatus>>")]),e._v(" "),r("td",[e._v("Submit and subscribe to watch an extrinsic until unsubscribed")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("submitExtrinsic")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(extrinsic: IExtrinsic) => Observable<Hash>>")]),e._v(" "),r("td",[e._v("Submit a fully formatted extrinsic for block inclusion")])])])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"babe"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#babe"}},[e._v("#")]),e._v(" babe")]),e._v(" "),r("p",[e._v("•  "),r("strong",[e._v("babe")]),e._v(": { epochAuthorship: AugmentedRpc<() => Observable<HashMap<AuthorityId, EpochAuthorship>>>  }")]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/polkadot-js/api/blob/d3703c072/packages/api/src/augment/rpc.ts#L60",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/api/src/augment/rpc.ts:60"),r("OutboundLink")],1)])]),e._v(" "),r("h4",{attrs:{id:"type-declaration-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#type-declaration-2"}},[e._v("#")]),e._v(" Type declaration:")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("epochAuthorship")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<HashMap<AuthorityId, EpochAuthorship>>>")]),e._v(" "),r("td",[e._v("Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore")])])])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"chain"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#chain"}},[e._v("#")]),e._v(" chain")]),e._v(" "),r("p",[e._v("•  "),r("strong",[e._v("chain")]),e._v(": { getBlock: AugmentedRpc<(hash?: BlockHash | string | Uint8Array) => Observable<SignedBlock>> ; getBlockHash: AugmentedRpc<(blockNumber?: BlockNumber | AnyNumber | Uint8Array) => Observable<BlockHash>> ; getFinalizedHead: AugmentedRpc<() => Observable<BlockHash>> ; getHeader: AugmentedRpc<(hash?: BlockHash | string | Uint8Array) => Observable<Header>> ; subscribeAllHeads: AugmentedRpc<() => Observable<Header>> ; subscribeFinalizedHeads: AugmentedRpc<() => Observable<Header>> ; subscribeNewHeads: AugmentedRpc<() => Observable<Header>>  }")]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/polkadot-js/api/blob/d3703c072/packages/api/src/augment/rpc.ts#L66",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/api/src/augment/rpc.ts:66"),r("OutboundLink")],1)])]),e._v(" "),r("h4",{attrs:{id:"type-declaration-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#type-declaration-3"}},[e._v("#")]),e._v(" Type declaration:")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("getBlock")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(hash?: BlockHash | string | Uint8Array) => Observable<SignedBlock>>")]),e._v(" "),r("td",[e._v("Get header and body of a relay chain block")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getBlockHash")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(blockNumber?: BlockNumber | AnyNumber | Uint8Array) => Observable<BlockHash>>")]),e._v(" "),r("td",[e._v("Get the block hash for a specific block")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getFinalizedHead")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<BlockHash>>")]),e._v(" "),r("td",[e._v("Get hash of the last finalized block in the canon chain")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getHeader")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(hash?: BlockHash | string | Uint8Array) => Observable<Header>>")]),e._v(" "),r("td",[e._v("Retrieves the header for a specific block")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("subscribeAllHeads")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<Header>>")]),e._v(" "),r("td",[e._v("Retrieves the newest header via subscription")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("subscribeFinalizedHeads")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<Header>>")]),e._v(" "),r("td",[e._v("Retrieves the best finalized header via subscription")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("subscribeNewHeads")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<Header>>")]),e._v(" "),r("td",[e._v("Retrieves the best header via subscription")])])])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"childstate"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#childstate"}},[e._v("#")]),e._v(" childstate")]),e._v(" "),r("p",[e._v("•  "),r("strong",[e._v("childstate")]),e._v(": { getKeys: AugmentedRpc<(childKey: PrefixedStorageKey | string | Uint8Array,prefix: StorageKey | string | Uint8Array | any,at?: Hash | string | Uint8Array) => Observable<Vec<StorageKey>>> ; getStorage: AugmentedRpc<(childKey: PrefixedStorageKey | string | Uint8Array,key: StorageKey | string | Uint8Array | any,at?: Hash | string | Uint8Array) => Observable<Option<StorageData>>> ; getStorageHash: AugmentedRpc<(childKey: PrefixedStorageKey | string | Uint8Array,key: StorageKey | string | Uint8Array | any,at?: Hash | string | Uint8Array) => Observable<Option<Hash>>> ; getStorageSize: AugmentedRpc<(childKey: PrefixedStorageKey | string | Uint8Array,key: StorageKey | string | Uint8Array | any,at?: Hash | string | Uint8Array) => Observable<Option<u64>>>  }")]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/polkadot-js/api/blob/d3703c072/packages/api/src/augment/rpc.ts#L96",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/api/src/augment/rpc.ts:96"),r("OutboundLink")],1)])]),e._v(" "),r("h4",{attrs:{id:"type-declaration-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#type-declaration-4"}},[e._v("#")]),e._v(" Type declaration:")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("getKeys")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(childKey: PrefixedStorageKey | string | Uint8Array,prefix: StorageKey | string | Uint8Array | any,at?: Hash | string | Uint8Array) => Observable<Vec<StorageKey>>>")]),e._v(" "),r("td",[e._v("Returns the keys with prefix from a child storage, leave empty to get all the keys")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getStorage")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(childKey: PrefixedStorageKey | string | Uint8Array,key: StorageKey | string | Uint8Array | any,at?: Hash | string | Uint8Array) => Observable<Option<StorageData>>>")]),e._v(" "),r("td",[e._v("Returns a child storage entry at a specific block state")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getStorageHash")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(childKey: PrefixedStorageKey | string | Uint8Array,key: StorageKey | string | Uint8Array | any,at?: Hash | string | Uint8Array) => Observable<Option<Hash>>>")]),e._v(" "),r("td",[e._v("Returns the hash of a child storage entry at a block state")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getStorageSize")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(childKey: PrefixedStorageKey | string | Uint8Array,key: StorageKey | string | Uint8Array | any,at?: Hash | string | Uint8Array) => Observable<Option<u64>>>")]),e._v(" "),r("td",[e._v("Returns the size of a child storage entry at a block state")])])])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"contracts"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#contracts"}},[e._v("#")]),e._v(" contracts")]),e._v(" "),r("p",[e._v("•  "),r("strong",[e._v("contracts")]),e._v(": { call: AugmentedRpc<(callRequest: ContractCallRequest | { dest?: any ; gasLimit?: any ; inputData?: any ; origin?: any ; value?: any  } | string | Uint8Array,at?: BlockHash | string | Uint8Array) => Observable<ContractExecResult>> ; getStorage: AugmentedRpc<(address: AccountId | string | Uint8Array,key: H256 | string | Uint8Array,at?: BlockHash | string | Uint8Array) => Observable<Option<Bytes>>> ; rentProjection: AugmentedRpc<(address: AccountId | string | Uint8Array,at?: BlockHash | string | Uint8Array) => Observable<Option<BlockNumber>>>  }")]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/polkadot-js/api/blob/d3703c072/packages/api/src/augment/rpc.ts#L114",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/api/src/augment/rpc.ts:114"),r("OutboundLink")],1)])]),e._v(" "),r("h4",{attrs:{id:"type-declaration-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#type-declaration-5"}},[e._v("#")]),e._v(" Type declaration:")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("call")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(callRequest: ContractCallRequest | { dest?: any ; gasLimit?: any ; inputData?: any ; origin?: any ; value?: any  } | string | Uint8Array,at?: BlockHash | string | Uint8Array) => Observable<ContractExecResult>>")]),e._v(" "),r("td",[e._v("Executes a call to a contract")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getStorage")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(address: AccountId | string | Uint8Array,key: H256 | string | Uint8Array,at?: BlockHash | string | Uint8Array) => Observable<Option<Bytes>>>")]),e._v(" "),r("td",[e._v("Returns the value under a specified storage key in a contract")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("rentProjection")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(address: AccountId | string | Uint8Array,at?: BlockHash | string | Uint8Array) => Observable<Option<BlockNumber>>>")]),e._v(" "),r("td",[e._v("Returns the projected time a given contract will be able to sustain paying its rent")])])])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"engine"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#engine"}},[e._v("#")]),e._v(" engine")]),e._v(" "),r("p",[e._v("•  "),r("strong",[e._v("engine")]),e._v(": { createBlock: AugmentedRpc<(createEmpty: bool | boolean | Uint8Array,finalize: bool | boolean | Uint8Array,parentHash?: BlockHash | string | Uint8Array) => Observable<CreatedBlock>> ; finalizeBlock: AugmentedRpc<(hash: BlockHash | string | Uint8Array,justification?: Justification | string | Uint8Array) => Observable<bool>>  }")]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/polkadot-js/api/blob/d3703c072/packages/api/src/augment/rpc.ts#L128",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/api/src/augment/rpc.ts:128"),r("OutboundLink")],1)])]),e._v(" "),r("h4",{attrs:{id:"type-declaration-6"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#type-declaration-6"}},[e._v("#")]),e._v(" Type declaration:")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("createBlock")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(createEmpty: bool | boolean | Uint8Array,finalize: bool | boolean | Uint8Array,parentHash?: BlockHash | string | Uint8Array) => Observable<CreatedBlock>>")]),e._v(" "),r("td",[e._v("Instructs the manual-seal authorship task to create a new block")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("finalizeBlock")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(hash: BlockHash | string | Uint8Array,justification?: Justification | string | Uint8Array) => Observable<bool>>")]),e._v(" "),r("td",[e._v("Instructs the manual-seal authorship task to finalize a block")])])])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"grandpa"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#grandpa"}},[e._v("#")]),e._v(" grandpa")]),e._v(" "),r("p",[e._v("•  "),r("strong",[e._v("grandpa")]),e._v(": { proveFinality: AugmentedRpc<(begin: BlockHash | string | Uint8Array,end: BlockHash | string | Uint8Array,authoritiesSetId?: u64 | AnyNumber | Uint8Array) => Observable<Option<EncodedFinalityProofs>>> ; roundState: AugmentedRpc<() => Observable<ReportedRoundStates>> ; subscribeJustifications: AugmentedRpc<() => Observable<JustificationNotification>>  }")]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/polkadot-js/api/blob/d3703c072/packages/api/src/augment/rpc.ts#L138",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/api/src/augment/rpc.ts:138"),r("OutboundLink")],1)])]),e._v(" "),r("h4",{attrs:{id:"type-declaration-7"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#type-declaration-7"}},[e._v("#")]),e._v(" Type declaration:")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("proveFinality")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(begin: BlockHash | string | Uint8Array,end: BlockHash | string | Uint8Array,authoritiesSetId?: u64 | AnyNumber | Uint8Array) => Observable<Option<EncodedFinalityProofs>>>")]),e._v(" "),r("td",[e._v("Prove finality for the range (begin; end] hash.")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("roundState")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<ReportedRoundStates>>")]),e._v(" "),r("td",[e._v("Returns the state of the current best round state as well as the ongoing background rounds")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("subscribeJustifications")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<JustificationNotification>>")]),e._v(" "),r("td",[e._v("Subscribes to grandpa justifications")])])])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"offchain"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#offchain"}},[e._v("#")]),e._v(" offchain")]),e._v(" "),r("p",[e._v("•  "),r("strong",[e._v("offchain")]),e._v(': { localStorageGet: AugmentedRpc<(kind: StorageKind | "__UNUSED" | "PERSISTENT" | "LOCAL" | number | Uint8Array,key: Bytes | string | Uint8Array) => Observable<Option<Bytes>>> ; localStorageSet: AugmentedRpc<(kind: StorageKind | "__UNUSED" | "PERSISTENT" | "LOCAL" | number | Uint8Array,key: Bytes | string | Uint8Array,value: Bytes | string | Uint8Array) => Observable<Null>>  }')]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/polkadot-js/api/blob/d3703c072/packages/api/src/augment/rpc.ts#L152",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/api/src/augment/rpc.ts:152"),r("OutboundLink")],1)])]),e._v(" "),r("h4",{attrs:{id:"type-declaration-8"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#type-declaration-8"}},[e._v("#")]),e._v(" Type declaration:")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("localStorageGet")])]),e._v(" "),r("td",[e._v('AugmentedRpc<(kind: StorageKind | "__UNUSED" | "PERSISTENT" | "LOCAL" | number | Uint8Array,key: Bytes | string | Uint8Array) => Observable<Option<Bytes>>>')]),e._v(" "),r("td",[e._v("Get offchain local storage under given key and prefix")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("localStorageSet")])]),e._v(" "),r("td",[e._v('AugmentedRpc<(kind: StorageKind | "__UNUSED" | "PERSISTENT" | "LOCAL" | number | Uint8Array,key: Bytes | string | Uint8Array,value: Bytes | string | Uint8Array) => Observable<Null>>')]),e._v(" "),r("td",[e._v("Set offchain local storage under given key and prefix")])])])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"payment"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#payment"}},[e._v("#")]),e._v(" payment")]),e._v(" "),r("p",[e._v("•  "),r("strong",[e._v("payment")]),e._v(": { queryInfo: AugmentedRpc<(extrinsic: Bytes | string | Uint8Array,at?: BlockHash | string | Uint8Array) => Observable<RuntimeDispatchInfo>>  }")]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/polkadot-js/api/blob/d3703c072/packages/api/src/augment/rpc.ts#L162",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/api/src/augment/rpc.ts:162"),r("OutboundLink")],1)])]),e._v(" "),r("h4",{attrs:{id:"type-declaration-9"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#type-declaration-9"}},[e._v("#")]),e._v(" Type declaration:")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("queryInfo")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(extrinsic: Bytes | string | Uint8Array,at?: BlockHash | string | Uint8Array) => Observable<RuntimeDispatchInfo>>")]),e._v(" "),r("td",[e._v("Retrieves the fee information for an encoded extrinsic")])])])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"rpc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rpc"}},[e._v("#")]),e._v(" rpc")]),e._v(" "),r("p",[e._v("•  "),r("strong",[e._v("rpc")]),e._v(": { methods: AugmentedRpc<() => Observable<RpcMethods>>  }")]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/polkadot-js/api/blob/d3703c072/packages/api/src/augment/rpc.ts#L168",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/api/src/augment/rpc.ts:168"),r("OutboundLink")],1)])]),e._v(" "),r("h4",{attrs:{id:"type-declaration-10"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#type-declaration-10"}},[e._v("#")]),e._v(" Type declaration:")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("methods")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<RpcMethods>>")]),e._v(" "),r("td",[e._v("Retrieves the list of RPC methods that are exposed by the node")])])])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"state"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#state"}},[e._v("#")]),e._v(" state")]),e._v(" "),r("p",[e._v("•  "),r("strong",[e._v("state")]),e._v(": { call: AugmentedRpc<(method: Text | string,data: Bytes | string | Uint8Array,at?: BlockHash | string | Uint8Array) => Observable<Bytes>> ; getChildKeys: AugmentedRpc<(childStorageKey: StorageKey | string | Uint8Array | any,childDefinition: StorageKey | string | Uint8Array | any,childType: u32 | AnyNumber | Uint8Array,key: StorageKey | string | Uint8Array | any,at?: BlockHash | string | Uint8Array) => Observable<Vec<StorageKey>>> ; getChildStorage: AugmentedRpc<(childStorageKey: StorageKey | string | Uint8Array | any,childDefinition: StorageKey | string | Uint8Array | any,childType: u32 | AnyNumber | Uint8Array,key: StorageKey | string | Uint8Array | any,at?: BlockHash | string | Uint8Array) => Observable<StorageData>> ; getChildStorageHash: AugmentedRpc<(childStorageKey: StorageKey | string | Uint8Array | any,childDefinition: StorageKey | string | Uint8Array | any,childType: u32 | AnyNumber | Uint8Array,key: StorageKey | string | Uint8Array | any,at?: BlockHash | string | Uint8Array) => Observable<Hash>> ; getChildStorageSize: AugmentedRpc<(childStorageKey: StorageKey | string | Uint8Array | any,childDefinition: StorageKey | string | Uint8Array | any,childType: u32 | AnyNumber | Uint8Array,key: StorageKey | string | Uint8Array | any,at?: BlockHash | string | Uint8Array) => Observable<u64>> ; getKeys: AugmentedRpc<(key: StorageKey | string | Uint8Array | any,at?: BlockHash | string | Uint8Array) => Observable<Vec<StorageKey>>> ; getKeysPaged: AugmentedRpc<(key: StorageKey | string | Uint8Array | any,count: u32 | AnyNumber | Uint8Array,startKey?: StorageKey | string | Uint8Array | any,at?: BlockHash | string | Uint8Array) => Observable<Vec<StorageKey>>> ; getMetadata: AugmentedRpc<(at?: BlockHash | string | Uint8Array) => Observable<Metadata>> ; getPairs: AugmentedRpc<(prefix: StorageKey | string | Uint8Array | any,at?: BlockHash | string | Uint8Array) => Observable<Vec<KeyValue>>> ; getReadProof: AugmentedRpc<(keys: Vec<StorageKey> | (StorageKey | string | Uint8Array | any)[],at?: BlockHash | string | Uint8Array) => Observable<ReadProof>> ; getRuntimeVersion: AugmentedRpc<(at?: BlockHash | string | Uint8Array) => Observable<RuntimeVersion>> ; getStorage: AugmentedRpc<<T>(key: StorageKey | string | Uint8Array | any,block?: Hash | Uint8Array | string) => Observable<T>> ; getStorageHash: AugmentedRpc<(key: StorageKey | string | Uint8Array | any,at?: BlockHash | string | Uint8Array) => Observable<Hash>> ; getStorageSize: AugmentedRpc<(key: StorageKey | string | Uint8Array | any,at?: BlockHash | string | Uint8Array) => Observable<u64>> ; queryStorage: AugmentedRpc<<T>(keys: Vec<StorageKey> | (StorageKey | string | Uint8Array | any)[],fromBlock?: Hash | Uint8Array | string,toBlock?: Hash | Uint8Array | string) => Observable<[Hash, T][]>> ; queryStorageAt: AugmentedRpc<<T>(keys: Vec<StorageKey> | (StorageKey | string | Uint8Array | any)[],at?: Hash | Uint8Array | string) => Observable<T>> ; subscribeRuntimeVersion: AugmentedRpc<() => Observable<RuntimeVersion>> ; subscribeStorage: AugmentedRpc<<T>(keys?: Vec<StorageKey> | (StorageKey | string | Uint8Array | any)[]) => Observable<T>>  }")]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/polkadot-js/api/blob/d3703c072/packages/api/src/augment/rpc.ts#L174",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/api/src/augment/rpc.ts:174"),r("OutboundLink")],1)])]),e._v(" "),r("h4",{attrs:{id:"type-declaration-11"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#type-declaration-11"}},[e._v("#")]),e._v(" Type declaration:")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("call")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(method: Text | string,data: Bytes | string | Uint8Array,at?: BlockHash | string | Uint8Array) => Observable<Bytes>>")]),e._v(" "),r("td",[e._v("Perform a call to a builtin on the chain")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getChildKeys")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(childStorageKey: StorageKey | string | Uint8Array | any,childDefinition: StorageKey | string | Uint8Array | any,childType: u32 | AnyNumber | Uint8Array,key: StorageKey | string | Uint8Array | any,at?: BlockHash | string | Uint8Array) => Observable<Vec<StorageKey>>>")]),e._v(" "),r("td",[e._v("Retrieves the keys with prefix of a specific child storage")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getChildStorage")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(childStorageKey: StorageKey | string | Uint8Array | any,childDefinition: StorageKey | string | Uint8Array | any,childType: u32 | AnyNumber | Uint8Array,key: StorageKey | string | Uint8Array | any,at?: BlockHash | string | Uint8Array) => Observable<StorageData>>")]),e._v(" "),r("td",[e._v("Retrieves the child storage for a key")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getChildStorageHash")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(childStorageKey: StorageKey | string | Uint8Array | any,childDefinition: StorageKey | string | Uint8Array | any,childType: u32 | AnyNumber | Uint8Array,key: StorageKey | string | Uint8Array | any,at?: BlockHash | string | Uint8Array) => Observable<Hash>>")]),e._v(" "),r("td",[e._v("Retrieves the child storage hash")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getChildStorageSize")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(childStorageKey: StorageKey | string | Uint8Array | any,childDefinition: StorageKey | string | Uint8Array | any,childType: u32 | AnyNumber | Uint8Array,key: StorageKey | string | Uint8Array | any,at?: BlockHash | string | Uint8Array) => Observable<u64>>")]),e._v(" "),r("td",[e._v("Retrieves the child storage size")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getKeys")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(key: StorageKey | string | Uint8Array | any,at?: BlockHash | string | Uint8Array) => Observable<Vec<StorageKey>>>")]),e._v(" "),r("td",[e._v("Retrieves the keys with a certain prefix")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getKeysPaged")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(key: StorageKey | string | Uint8Array | any,count: u32 | AnyNumber | Uint8Array,startKey?: StorageKey | string | Uint8Array | any,at?: BlockHash | string | Uint8Array) => Observable<Vec<StorageKey>>>")]),e._v(" "),r("td",[e._v("Returns the keys with prefix with pagination support.")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getMetadata")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(at?: BlockHash | string | Uint8Array) => Observable<Metadata>>")]),e._v(" "),r("td",[e._v("Returns the runtime metadata")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getPairs")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(prefix: StorageKey | string | Uint8Array | any,at?: BlockHash | string | Uint8Array) => Observable<Vec<KeyValue>>>")]),e._v(" "),r("td",[e._v("Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getReadProof")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(keys: Vec<StorageKey> | (StorageKey | string | Uint8Array | any)[],at?: BlockHash | string | Uint8Array) => Observable<ReadProof>>")]),e._v(" "),r("td",[e._v("Returns proof of storage entries at a specific block state")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getRuntimeVersion")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(at?: BlockHash | string | Uint8Array) => Observable<RuntimeVersion>>")]),e._v(" "),r("td",[e._v("Get the runtime version")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getStorage")])]),e._v(" "),r("td",[e._v("AugmentedRpc<<T>(key: StorageKey | string | Uint8Array | any,block?: Hash | Uint8Array | string) => Observable<T>>")]),e._v(" "),r("td",[e._v("Retrieves the storage for a key")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getStorageHash")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(key: StorageKey | string | Uint8Array | any,at?: BlockHash | string | Uint8Array) => Observable<Hash>>")]),e._v(" "),r("td",[e._v("Retrieves the storage hash")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("getStorageSize")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(key: StorageKey | string | Uint8Array | any,at?: BlockHash | string | Uint8Array) => Observable<u64>>")]),e._v(" "),r("td",[e._v("Retrieves the storage size")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("queryStorage")])]),e._v(" "),r("td",[e._v("AugmentedRpc<<T>(keys: Vec<StorageKey> | (StorageKey | string | Uint8Array | any)[],fromBlock?: Hash | Uint8Array | string,toBlock?: Hash | Uint8Array | string) => Observable<[Hash, T][]>>")]),e._v(" "),r("td",[e._v("Query historical storage entries (by key) starting from a start block")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("queryStorageAt")])]),e._v(" "),r("td",[e._v("AugmentedRpc<<T>(keys: Vec<StorageKey> | (StorageKey | string | Uint8Array | any)[],at?: Hash | Uint8Array | string) => Observable<T>>")]),e._v(" "),r("td",[e._v("Query storage entries (by key) starting at block hash given as the second parameter")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("subscribeRuntimeVersion")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<RuntimeVersion>>")]),e._v(" "),r("td",[e._v("Retrieves the runtime version via subscription")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("subscribeStorage")])]),e._v(" "),r("td",[e._v("AugmentedRpc<<T>(keys?: Vec<StorageKey> | (StorageKey | string | Uint8Array | any)[]) => Observable<T>>")]),e._v(" "),r("td",[e._v("Subscribes to storage changes for the provided keys")])])])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"system"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#system"}},[e._v("#")]),e._v(" system")]),e._v(" "),r("p",[e._v("•  "),r("strong",[e._v("system")]),e._v(": { accountNextIndex: AugmentedRpc<(accountId: AccountId | string | Uint8Array) => Observable<Index>> ; addReservedPeer: AugmentedRpc<(peer: Text | string) => Observable<Text>> ; chain: AugmentedRpc<() => Observable<Text>> ; chainType: AugmentedRpc<() => Observable<ChainType>> ; dryRun: AugmentedRpc<(extrinsic: Bytes | string | Uint8Array,at?: BlockHash | string | Uint8Array) => Observable<ApplyExtrinsicResult>> ; health: AugmentedRpc<() => Observable<Health>> ; localListenAddresses: AugmentedRpc<() => Observable<Vec<Text>>> ; localPeerId: AugmentedRpc<() => Observable<Text>> ; name: AugmentedRpc<() => Observable<Text>> ; networkState: AugmentedRpc<() => Observable<NetworkState>> ; nodeRoles: AugmentedRpc<() => Observable<Vec<NodeRole>>> ; peers: AugmentedRpc<() => Observable<Vec<PeerInfo>>> ; properties: AugmentedRpc<() => Observable<ChainProperties>> ; removeReservedPeer: AugmentedRpc<(peerId: Text | string) => Observable<Text>> ; version: AugmentedRpc<() => Observable<Text>>  }")]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/polkadot-js/api/blob/d3703c072/packages/api/src/augment/rpc.ts#L248",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/api/src/augment/rpc.ts:248"),r("OutboundLink")],1)])]),e._v(" "),r("h4",{attrs:{id:"type-declaration-12"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#type-declaration-12"}},[e._v("#")]),e._v(" Type declaration:")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("accountNextIndex")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(accountId: AccountId | string | Uint8Array) => Observable<Index>>")]),e._v(" "),r("td",[e._v("Retrieves the next accountIndex as available on the node")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("addReservedPeer")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(peer: Text | string) => Observable<Text>>")]),e._v(" "),r("td",[e._v("Adds a reserved peer")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("chain")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<Text>>")]),e._v(" "),r("td",[e._v("Retrieves the chain")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("chainType")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<ChainType>>")]),e._v(" "),r("td",[e._v("Retrieves the chain type")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("dryRun")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(extrinsic: Bytes | string | Uint8Array,at?: BlockHash | string | Uint8Array) => Observable<ApplyExtrinsicResult>>")]),e._v(" "),r("td",[e._v("Dry run an extrinsic at a given block")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("health")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<Health>>")]),e._v(" "),r("td",[e._v("Return health status of the node")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("localListenAddresses")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<Vec<Text>>>")]),e._v(" "),r("td",[e._v("The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("localPeerId")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<Text>>")]),e._v(" "),r("td",[e._v("Returns the base58-encoded PeerId of the node")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("name")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<Text>>")]),e._v(" "),r("td",[e._v("Retrieves the node name")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("networkState")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<NetworkState>>")]),e._v(" "),r("td",[e._v("Returns current state of the network")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("nodeRoles")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<Vec<NodeRole>>>")]),e._v(" "),r("td",[e._v("Returns the roles the node is running as")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("peers")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<Vec<PeerInfo>>>")]),e._v(" "),r("td",[e._v("Returns the currently connected peers")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("properties")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<ChainProperties>>")]),e._v(" "),r("td",[e._v("Get a custom set of properties as a JSON object, defined in the chain spec")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("removeReservedPeer")])]),e._v(" "),r("td",[e._v("AugmentedRpc<(peerId: Text | string) => Observable<Text>>")]),e._v(" "),r("td",[e._v("Remove a reserved peer")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("version")])]),e._v(" "),r("td",[e._v("AugmentedRpc<() => Observable<Text>>")]),e._v(" "),r("td",[e._v("Retrieves the version of the node")])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);